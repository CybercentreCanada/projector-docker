trigger:
  batch: true
  branches:
    include:
      - trino

variables:
  containerRegistry: uchimera
  imageRepository: cccs/dev/projector-intellij-ce
  buildTimestamp: $[format('{0:yyyyMMddHHmmss}', pipeline.startTime)]
  DOCKER_BUILDKIT: 1

pool:
  vmImage: ubuntu-latest

steps:
  - bash: |
      BRANCH_NAME=$(echo "$SYSTEM_PULLREQUEST_SOURCEBRANCH $BUILD_SOURCEBRANCH" | sed -r 's/^\s*(refs\/heads\/)?(\S*).*$/\2/' | sed 's/\//_/g')
      echo "##vso[task.setvariable variable=BRANCH_NAME]$BRANCH_NAME"
    displayName: Parse Source Control Branch Name
  - task: Docker@2
    displayName: Login to $(containerRegistry)
    inputs:
      command: login
      containerRegistry: $(containerRegistry)
  - task: DownloadSecureFile@1
    name: caCertificate
    displayName: 'Download CA certificate'
    inputs:
      secureFile: 'ssl_proxy_corp_cse-cst_gc_ca.crt'
  - script: |
      mkdir -p $(Build.SourcesDirectory)/.work/cacerts
      cp $(caCertificate.secureFilePath) $(Build.SourcesDirectory)/.work/cacerts/
  - task: Docker@2
    displayName: Build the image
    inputs:
      command: build
      containerRegistry: $(containerRegistry)
      repository: $(imageRepository)
      # The downloadUrl is meant to point to the latest tested version of 'IntelliJ IDEA Community Edition' from https://github.com/JetBrains/projector-installer/blob/master/projector_installer/compatible_ide.json
      arguments: --build-arg buildGradle=true --build-arg "extraCaCertsDir=.work/cacerts/" --build-arg "downloadUrl=https://download.jetbrains.com/idea/ideaIC-2021.3.2.tar.gz"
      tags: |
        $(BRANCH_NAME)
        $(BRANCH_NAME)_$(buildTimestamp)_b$(Build.BuildId)
  - task: Docker@2
    displayName: Push the image to $(containerRegistry)
    inputs:
      command: push
      containerRegistry: $(containerRegistry)
      repository: $(imageRepository)
      tags: |
        $(BRANCH_NAME)
        $(BRANCH_NAME)_$(buildTimestamp)_b$(Build.BuildId)
  - task: Docker@2
    displayName: Logout of $(containerRegistry)
    inputs:
      command: logout
      containerRegistry: $(containerRegistry)
    condition: always()
